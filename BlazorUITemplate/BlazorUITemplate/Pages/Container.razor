@using BlazorUITemplate.Data
@using BlazorUITemplate.Enums
@using BlazorUITemplate.Services
@using BlazorUITemplate.Components
@inject EventService EventService

<CascadingValue Value="this">
        @ChildContent
</CascadingValue>

@code {
    
    [Parameter] public List<ButtonModel>? Buttons { get; set; }
    [Parameter] public List<InputModel>? Inputs { get; set; }
    [Parameter] public List<ImageModel>? Images { get; set; }
    
    [Parameter] public BaseModel? SelectedComponent { get; set; }
    [Parameter] public BaseModel? DraggingComponent { get; set; }
    
    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override void OnInitialized ()
    {
        EventService.OnDragOccured += OnDragEventHandler;
        EventService.OnGetComponentOccured += OnGetComponentEventHandler;
    }
    
    public void Dispose()
    {
        EventService.OnDragOccured -= OnDragEventHandler;
        EventService.OnGetComponentOccured -= OnGetComponentEventHandler;
    }
    
    private void OnDragEventHandler<T> (T model) where T:BaseModel
    {
        DraggingComponent = model;
    }

    private void OnGetComponentEventHandler <T> (T model) where T:BaseModel
    {
        SelectedComponent = model;
    }

}